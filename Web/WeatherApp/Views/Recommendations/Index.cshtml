@model Sequencing.WeatherApp.Models.RecommendationViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Recommendations</h2>
<br>
<p>
    @using (Html.BeginForm("Index", "Recommendations", FormMethod.Get))
    {
        <div class="form-inline row">
            <div class="col-xs-2">
                <label class="control-label">Weather Condition: </label>

                @Html.DropDownList("condId", Model.ConditionList as SelectList,
                     htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-xs-2">
                <label class="control-label">Melanoma risk: </label>
                @Html.DropDownList("risk", Model.MelanomaType as SelectList,
                     htmlAttributes: new { @class = "form-control " })
            </div>
            <div class="row">
                <div class="col-xs-2">
                    <label class="control-label">Vitamin D: </label>
                    @Html.DropDownList("vitD", Model.VitD as SelectList,
                     htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-xs-2">
                    <label class="control-label"></label>
                    <input type="submit" value="Filter" class="btn btn-primary form-control  " />
                </div>
            </div>
        </div>
    }
    <br><br>
    @Html.ActionLink("Create recommendation", "Create", null, new { @class = "btn btn-info" })
</p>

<br><br>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RecommendationList.FirstOrDefault().Forecast)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RecommendationList.FirstOrDefault().Condition.WeatherCond)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RecommendationList.FirstOrDefault().MelanomaRisk.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RecommendationList.FirstOrDefault().VitaminDId)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.RecommendationList)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Forecast)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Condition.WeatherCond)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MelanomaRisk.Type)
            </td>
            <td>
                <label style="font-weight:normal;">@(item.VitaminD.Type == true ? "True" : "False")</label>
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new
                   {
                       risk = item.MelanomaRiskId,
                       vitaminD = item.VitaminDId,
                       condId = item.CondId,
                       groupId = item.GroupItemId,
                       lang = item.Language
                   }, new { @class = "btn btn-default" })

                @Ajax.ActionLink("Delete", "Delete", new
                   {
                       risk = item.MelanomaRiskId,
                       vitaminD = item.VitaminDId,
                       condId = item.CondId,
                       groupId = item.GroupItemId,
                       lang = item.Language
                   }, new AjaxOptions { HttpMethod = "POST" }, new { @class = "btn btn-default" })
            </td>
        </tr>
    }

</table>
        Page @(Model.RecommendationList.PageCount < Model.RecommendationList.PageNumber ? 0 : Model.RecommendationList.PageNumber) out of @Model.RecommendationList.PageCount
        @Html.PagedListPager(Model.RecommendationList, page => Url.Action("Index", new { page , risk = ViewBag.SearchRisk, vitD = ViewBag.SearchVitamin, condId = ViewBag.SearchConds }))
