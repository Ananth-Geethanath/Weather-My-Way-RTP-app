@model Sequencing.WeatherApp.Models.CommonData

@{
    ViewBag.Title = "Select location";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<script src="/Scripts/jquery.simpleWeather.min.js"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script src="/assets/js/vidRandom.js"></script>

<div id="titleText">
    <h3 id="titleOne">
        Weather My Way +RTP
    </h3>
    <h4 id="subTitle">Location</h4>
</div>
@using (Html.BeginForm("SaveLocation", "Settings", new {r = Request.QueryString["r"]},
    FormMethod.Post, new {@class = "form-horizontal", @role = "form"}))
{
    <div id="locInstruction">
        <p>
            Enter your location below<br />
            -OR-<br />
            Click the Auto-detect Button
        </p>
    </div>
    <div id="location">               
        <div id="locIn">
            @Html.TextBox("city", Model.Context.City, new {placeholder = "Enter your location", style = "width:75%"})
            <div class="city-error"></div>
        </div>
        <div id="discoverButton"><img id="locIcon" src="/assets/img/location-crosshairs-icon-Sequencing-com-32px.png" /><a id="discButton">Auto-detect <br/> location</a></div>
        <div id="locButton"><button id="contButton"  type="submit">Continue</button></div>
    </div>
    
}
<div class="col-sm-offset-2 col-sm-10">


</div>

<style type="text/css">
    .city-error .error {
        color: red;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        var form = $('#contButton').parents('form');
        form.submit(function (e) {
            var errorContainer = form.find('.city-error');
            errorContainer.html('Checking city...');
            e.preventDefault();
            var city = form.find('#city').val();
            $.ajax({
                url: '@Html.Raw(Url.Action("VerifyLocation", "Default"))',
                method: 'GET',
                data: {
                    city: city
                },
                success: function (data, textStatus, jqXHR) {
                    if (data == "True") {
                        form.get(0).submit();
                    }
                    else {
                        errorContainer.html('');
                        errorContainer.append($('<div></div>').addClass('error').text('This location is not recognized.'));
                        errorContainer.append($('<div></div>').addClass('error').text("Use the 'Location auto-detect' button or enter in a nearby location."));
                    }
                }
            });
        });
    });
</script>


<script>
    $(document).ready(function() {
        $("#btnDiscover").click(function(parameters) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var lat = position.coords.latitude;
                var lng = position.coords.longitude;
                codeLatLng(lat, lng);
            }, function(code) {
                $("#city").val("error evaluating location");
            });

        });
    });

    function codeLatLng(lat, lng) {
        var geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(lat, lng);
        geocoder.geocode({ 'latLng': latlng }, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                var city = null;
                var country = null;
                var state = null;
                if (results[1]) {
                    //formatted address
                    //find country name
                    for (var i = 0; i < results[0].address_components.length; i++) {
                        for (var b = 0; b < results[0].address_components[i].types.length; b++) {
                            //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                            if (results[0].address_components[i].types[b] == "locality") {
                                if (!city)
                                    city = results[0].address_components[i];
                            }
                            if (results[0].address_components[i].types[b] == "country") {
                                if (!country)
                                    country = results[0].address_components[i];
                            }
                            if (results[0].address_components[i].types[b] == "administrative_area_level_1") {
                                if (!state)
                                    state = results[0].address_components[i];
                            }
                        }
                    }
                    if (city) {
                        var fin = city.short_name;
                        if (country.short_name == "US")
                            fin += ", " + state.short_name;
                        else
                            fin += ", " + country.short_name;
                        $("#city").val(fin);
                        return;
                    }
                }
            }
            $("#city").val("undetermined");
        });
    }
</script>